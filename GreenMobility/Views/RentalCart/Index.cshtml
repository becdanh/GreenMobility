@using Microsoft.AspNetCore.Http;
@model List<GreenMobility.ViewModels.CartItemVM>
@{
    ViewData["Title"] = "Giỏ thuê";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var returnUrl = Context.Request.Query["ReturnUrl"];
}
<main class="main-content">
    <div class="breadcrumb-area breadcrumb-height" data-bg-image="assets/images/breadcrumb/bg/becdanhphoto1.png">
        <div class="container h-100">
            <div class="row h-100">
                <div class="col-lg-12">
                    <div class="breadcrumb-item">
                        <h2 class="breadcrumb-heading">@_localization.Getkey("RentalCart")</h2>
                        <ul>
                            <li>
                                <a href="/">@_localization.Getkey("Home")<i class="pe-7s-angle-right"></i></a>
                            </li>
                            <li>@_localization.Getkey("RentalCart")</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="cart-area section-space-y-axis-100">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    @if (Model != null && Model.Count() > 0)
                    {
                        <div class="table-content table-responsive">
                            <h2>@Model.First().ParkingName</h2>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="product_remove">@_localization.Getkey("Delete")</th>
                                        <th class="product-thumbnail">@_localization.Getkey("Image")</th>
                                        <th class="cart-product-name">@_localization.Getkey("Bicycle")</th>
                                        <th class="cart-product-name">@_localization.Getkey("LicensePlate")</th>
                                        <th class="product-quantity">@_localization.Getkey("RentalPrice")</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.Count() > 0)
                                    {
                                        foreach (var item in Model)
                                        {
                                            <tr>
                                                <td class="product_remove">
                                                    <input type="button" value="X" class="removecart btn btn-primary" data-mahh="@item.bicycle.BicycleId" />
                                                </td>
                                                <td class="product-thumbnail">
                                                    <a href="javascript:void(0)">
                                                        <img src="~/images/bicycles/@item.bicycle.Photo" alt="@item.bicycle.BicycleName" style="height:112px;width:124px">
                                                    </a>
                                                </td>
                                                <td class="product-name">@item.bicycle.BicycleName</td>
                                                <td class="product-name">@item.bicycle.LicensePlate</td>
                                                <td class="product-subtotal">@item.bicycle.RentalPrice</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="cart-page-total">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#updateAndPickupModal">
                                    @_localization.Getkey("UpdateRentalInfor")
                                </button>
                            </div>
                            <!-- Modal -->
                            <div class="modal fade" id="updateAndPickupModal" tabindex="-1" aria-labelledby="updateAndPickupModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="updateAndPickupModalLabel">@_localization.Getkey("UpdateRentalInfor")</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="form-group">
                                                <label for="rentalHours">@_localization.Getkey("RentalHours")</label>
                                                <input type="number" class="form-control" id="rentalHours">
                                            </div>
                                            <br />
                                            <div class="form-group">
                                                <label for="appointmentTime">@_localization.Getkey("AppointmentTime")</label>
                                                <input type="datetime-local" class="form-control" id="appointmentTime">
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@_localization.Getkey("Close")</button>
                                            <button type="button" class="btn btn-primary" id="updateAndPickupConfirmBtn">@_localization.Getkey("Submit")</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5 ml-auto">
                                <div class="cart-page-total">
                                    <h2>@_localization.Getkey("CartTotals")</h2>
                                    <ul>
                                        <li>@_localization.Getkey("AppointmentTime") <span>@Model.First().AppointmentTime.ToString("dd/MM/yyyy HH:mm")</span></li>
                                        <li>@_localization.Getkey("RentalHours")<span>@Model.First().RentalHours @_localization.Getkey("Hours")</span></li>
                                        <li>@_localization.Getkey("TotalMoney")<span>@Model.Sum(x => x.TotalMoney).ToString("#,##0") VNĐ</span></li>
                                    </ul>
                                    @{
                                        var taikhoanID = Context.Session.GetString("CustomerId");
                                        <a asp-controller="Checkout" asp-action="Index" id="checkoutButton" class="btn btn-secondary btn-primary-hover">@_localization.Getkey("GoToCheckout")</a>

                                    }
                                </div>
                            </div>
                        </div>

                    }
                    else
                    {
                        <p>@_localization.Getkey("NoBikeInCart")</p>
                        <a asp-controller="Rentals" asp-action="Index" class="btn btn-primary">@_localization.Getkey("GoToRental")</a>
                    }
                </div>
            </div>
        </div>
    </div>
</main>
@section Scripts {
    <script>
        $(function () {
            function loadHeaderCart() {
                $('#numberCart').load("/AjaxContent/NumberCart");
            }
            $(".removecart").click(function () {
                var bicycleid = $(this).attr("data-mahh");
                $.ajax({
                    url: "/api/cart/remove",
                    type: "POST",
                    dataType: "JSON",
                    data: { bicycleId: bicycleid },
                    success: function (result) {
                        if (result.success) {
                            loadHeaderCart();
                            location.reload();
                        }
                    },
                    error: function (rs) {
                        alert("Remove Cart Error !");
                    }
                });
            });
            $(function () {
                $('#updateAndPickupConfirmBtn').click(function () {
                    var rentalHours = $('#rentalHours').val();
                    var appointmentTime = $('#appointmentTime').val();
                    $.ajax({
                        url: '/api/cart/update',
                        type: 'POST',
                        data: {
                            rentalHours: rentalHours,
                            appointmentTime: appointmentTime
                        },
                        success: function (response) {
                            if (response.success) {
                                location.reload(); // Tải lại trang sau khi cập nhật
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('Có lỗi xảy ra khi gửi yêu cầu cập nhật');
                        }
                    });
                });
            });

            $('#updateAndPickupModal').on('show.bs.modal', function (event) {
                $.ajax({
                    url: '/api/cart/getcartinfo',
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            $('#rentalHours').val(response.rentalHours);
                            $('#appointmentTime').val(response.appointmentTime);
                        } else {
                            alert('Có lỗi xảy ra khi lấy thông tin giỏ hàng');
                        }
                    },
                    error: function () {
                        alert('Có lỗi xảy ra khi gửi yêu cầu lấy thông tin giỏ hàng');
                    }
                });
            });
            $(document).ready(function () {
                $("#checkoutButton").click(function () {
                    $.ajax({
                        url: "/api/cart/checkhours",
                        type: "GET",
                        success: function (response) {
                            if (response.success) {
                                window.location.href = "/checkout";
                            } else {
                                alert(response.message);
                                location.reload();
                            }
                        },
                        error: function (xhr, status, error) {
                            alert("Có lỗi xảy ra khi kiểm tra số giờ thuê");
                        }
                    });
                });
            });
        });
    </script>
}